spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      # Global CORS configuration
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3000"
              - "http://localhost:3001"
              - "https://oerms.com"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
            allowedHeaders:
              - "*"
            allowCredentials: true
            exposedHeaders:
              - Authorization
              - X-User-Id
              - X-User-Email
              - X-User-Roles
            maxAge: 3600

server:
  port: 8080

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI:http://admin:admin123@localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

# User Service Configuration
user-service:
  validate-token-path: /api/v1/auth/validate

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:a99c27f6b1eeeecf22eb7df5532bf8f0b5b5ca565933d519d0f1d52f789e47544bf3bf6fd6c3a19c2a6a2dd16f9576101fa4cbfa73e579eee635ab736d69f6f2}
  expiration: 86400000  # 24 hours
  refresh-expiration: 604800000  # 7 days

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      userServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
      examServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
      questionServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
      attemptServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
      resultServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
      notificationServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50

  timelimiter:
    instances:
      userServiceCircuitBreaker:
        timeoutDuration: 5s
      examServiceCircuitBreaker:
        timeoutDuration: 5s
      questionServiceCircuitBreaker:
        timeoutDuration: 5s
      attemptServiceCircuitBreaker:
        timeoutDuration: 5s
      resultServiceCircuitBreaker:
        timeoutDuration: 5s
      notificationServiceCircuitBreaker:
        timeoutDuration: 5s

management:
  endpoints:
    web:
      exposure:
        include: gateway,health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
    gateway:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty: INFO
    com.oerms.apigateway: DEBUG
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"