spring:
  application:
    name: attempt-service

  datasource:
    url: jdbc:postgresql://localhost:5432/oerms
    username: ${DB_USERNAME:oerms_user}
    password: ${DB_PASSWORD:oerms_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 30
      minimum-idle: 10

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: oerms_attempt
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false

  flyway:
    enabled: true
    baseline-on-migrate: true
    schemas: oerms_attempt
    locations: classpath:db/migration

  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD:}

  cache:
    type: redis
    redis:
      time-to-live: 1800000  # 30 minutes for active attempts

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: attempt-service-group
      properties:
        spring.json.trusted.packages: com.oerms.*

server:
  port: 8086

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

# Attempt Configuration
attempt:
  autosave-interval-seconds: 30
  expire-check-interval-seconds: 60
  max-concurrent-attempts-per-student: 5

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 10000

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

logging:
  level:
    root: INFO
    com.oerms.attempt: DEBUG
  file:
    name: logs/attempt-service.log

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/oerms
  data:
    redis:
      host: redis
  kafka:
    bootstrap-servers: kafka:29092

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
