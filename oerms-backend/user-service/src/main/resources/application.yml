spring:
  application:
    name: user-service

  datasource:
    url: jdbc:postgresql://localhost:5432/oerms
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:0000}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_schema: oerms_user
        jdbc:
          lob:
            non_contextual_creation: true
        temp:
          use_jdbc_metadata_defaults: false
    open-in-view: false

  flyway:
    enabled: true
    baseline-on-migrate: true
    schemas: oerms_user
    locations: classpath:db/migration
    validate-on-migrate: true

  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms

  cache:
    type: redis
    redis:
      time-to-live: 3600000  # 1 hour
      cache-null-values: false

server:
  port: 8084
  error:
    include-message: always
    include-binding-errors: always

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 10
    metadata-map:
      version: 1.0.0

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:a99c27f6b1eeeecf22eb7df5532bf8f0b5b5ca565933d519d0f1d52f789e47544bf3bf6fd6c3a19c2a6a2dd16f9576101fa4cbfa73e579eee635ab736d69f6f2}
  expiration: 86400000  # 24 hours
  refresh-expiration: 604800000  # 7 days

# Security Configuration
security:
  password:
    bcrypt-strength: 12
  rate-limit:
    login-attempts: 5
    login-window-seconds: 300

# API Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  show-actuator: true

logging:
  level:
    root: INFO
    com.oerms.user: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/user-service.log

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/oerms

  # Redis Configuration (add this)
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      jedis:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms


eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/